import {
    FETCH_PIZZA_FAILURE,
    FETCH_PIZZA_START,
    FETCH_PIZZA_SUCCESS,
    ADD_PIZZA_TO_BASKET,
    REMOVE_PIZZA_FROM_BASKET,
    REMOVE_PIZZA_FROM_BASKET_BY_INDEX,
    LOAD_GOOGLE_DATA,
    LOADING_GOOGLE_DATA,
    LOADING_GOOGLE_DATA_FAILURE
}
    from 'actionTypes'

import { fetchPizza as fetchPizzaApi } from 'api'
import { MockPizzes } from './../api/mockDataTmp'
import moment from 'moment'
import { firebaseRef } from 'data'

const request = require('superagent');


export const fetchPizza = () => async dispatch => {
    dispatch({ type: FETCH_PIZZA_START })

    try {
        const pizza = await fetchPizzaApi()
        dispatch({
            type: FETCH_PIZZA_SUCCESS,
            payload: pizza
        })
    }
    catch (err) {
        dispatch({
            type: FETCH_PIZZA_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const addPizzaToBasket = id => dispatch => {
    dispatch({
        type: ADD_PIZZA_TO_BASKET,
        payload: id
    })
}

export const removePizzaFromBasket = id => dispatch => {
    dispatch({
        type: REMOVE_PIZZA_FROM_BASKET,
        payload: id
    })
}

export const removePizzaFromBasketByIndex = id => dispatch => {
    dispatch({
        type: REMOVE_PIZZA_FROM_BASKET_BY_INDEX,
        payload: id
    })
}


export var addOrderToDb = (order) => {
    /*    dispatch({
            type : ADD_ORDER_TO_FIREBASE
        })*/
    firebaseRef.child('orders').push(order);
}

export var sendEmail = (order) => {
    /* dispatch({
         type : SEND_ORDER_TO_EMAIL,
         payload : order
     })*/

    fetch('/sendemail', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ order: order })
    })
}

export var startAddOrder = (text, name, email, phone, address, price, msg) => {
    var order = {
        info: text,
        orderDate: moment().format(),
        email: email,
        phone: phone,
        msg: msg,
        name: name,
        address: address,
        price: price
    }
    try {
        addOrderToDb(order);
        //отпарвляем запрос на сервер
        sendEmail(order);
    }
    catch (e) {
        console.log('error ' + e.message)
    }
}

export var saveToDbPizza = (data) => {
    console.log('start')
    try {
        let data = MockPizzes;
        for (let i = 0; i < data.length; i++) {
            console.log(data[i].id)
            let pizza = {
                id: data[i].id,
                categoryId: data[i].categoryId,
                name: data[i].name,
                description: MockPizzes[i].description,
                price: data[i].price,
                image: data[i].image
            }
            console.log(JSON.stringify(pizza))
            //firebaseRef.child('pizza').push(pizza);
        }
    } catch (e) {
        console.log('error ' + e.message)
    }

}
export var getPizzesFromDb = () => {
    try {
        let allData = []
        firebaseRef.child('pizza').once('value').then((snapshot) => {
            let data = snapshot.val();
            //console.log(JSON.stringify(data))
            let keys = Object.keys(data);
            let values = Object.values(data);
            for (let i = 0; i < Object.keys(data).length; i++) {
                //console.log(keys[i] + ' ' + JSON.stringify(values[i]))
                let pizza = {
                    key: keys[i],
                    id: values[i].id,
                    categoryId: values[i].categoryId,
                    name: values[i].name,
                    description: values[i].description,
                    price: values[i].price,
                    image: values[i].image
                }
                ///console.log(JSON.stringify(pizza))
                allData.push(pizza)
                //firebaseRef.child('pizza').push(pizza);
            }
            getAllData(allData)
        });

    } catch (e) {
        console.log('error ' + e.message)
    }
}

var getAllData = (data) => {
    console.log('length ' + JSON.stringify(data))
    return dispatch => {
        return dispatch({
            type: FETCH_PIZZA_SUCCESS,
            payload: data
        })
    }

}


export const getGooleData = (url) =>  dispatch => {
    dispatch({ type: LOADING_GOOGLE_DATA })

    try {
        let data = []
        request
            .get('https://cors-anywhere.herokuapp.com/' + url)
            .set('Content-Type', 'application/json')
            .set('Access-Control-Allow-Credentials', '*')
            .then(function (res) {
                if (res.body.routes.length > 0) {
                    for (let i = 0; i < res.body.routes.length; i++) {
                        data.push({ km: JSON.stringify(res.body.routes[i].legs[0].distance.text), coor: JSON.stringify(res.body.routes[i].legs[0].end_location) })
                    }
                }
                console.log(JSON.stringify(data))
                dispatch({
                    type: LOAD_GOOGLE_DATA,
                    payload: data
                })
            })
    }
    catch (err) {
        dispatch({
            type: LOADING_GOOGLE_DATA_FAILURE,
            payload: err,
            error: true
        })
    }
}


