import R from 'ramda'
import {deliveryPriceMin, deliverypriceMax, deliveryPriceForFree} from 'constants'
export const  getPizzaById = (state, id) => R.prop(id, state.pizza)

export const getPizza = state => {
    const pizza = R.map(id => getPizzaById(state, id), state.pizzaPage.ids)
    return pizza
}

export const getTotalBasketCount = state => R.length(state.basket)

export const getTotalBasketPrice = state => {
    const totalPrice = R.compose(
        R.sum,
        R.pluck('price'),
        R.map(id => getPizzaById(state, id))
    )(state.basket)

    return totalPrice;
}

export const getBasketPizzaWithCount = state => {
    const uniqIds = R.uniq(state.basket);

    const pizzaCount = id => R.compose(
        R.length,
        R.filter(basketId => R.equals(id, basketId))
    )(state.basket);

    const pizzaWithCount = pizza => R.assoc('count', pizzaCount(pizza.id), pizza)

    const pizza = R.compose(R.map(pizzaWithCount), R.map(id => getPizzaById(state, id)))(uniqIds);
    return pizza;
}
export const getBasketPizzaWithoutCount = state => {
    let pizza = state.basket.map((id) => getPizzaById(state, id))
    return pizza;
}

export const getDeliveryPrice = state => {
    let totalPrice =  getTotalBasketPrice(state);
    return totalPrice >  deliveryPriceForFree  ? 0 : ('От ' + deliveryPriceMin + ' до ' + deliverypriceMax)
}
