import React, { Component } from 'react'
import R from 'ramda'
import { connect } from 'react-redux'

import { fetchPizza, addPizzaToBasket } from 'actions'
import { getPizza } from 'selectors'
import { GridList, GridTile } from 'material-ui/GridList';
import IconButton from 'material-ui/IconButton';
import ReactTooltip from 'react-tooltip'
import Paper from 'material-ui/Paper';
import Icon from 'react-icons-kit';
import { ic_help_outline } from 'react-icons-kit/md/ic_help_outline';

import './style.css'

const styles = {
    root: {
        display: 'flex',
        flexWrap: 'wrap',
        justifyContent: 'space-around'
    },
    gridList: {
        width: 800,
        marginLeft: 20,
        overflowY: 'auto',
        paddingTop : 30  
      }
    ,
    titleStyle: {
        height : 124
      }
};

const style = {
    margin: 20,
    textAlign: 'center'
};

class Pizza extends Component {
    componentDidMount() {
        this.props.fetchPizza()
    }


    renderPizza(pizza, index) {
     
        const { addPizzaToBasket } = this.props;
        const shortDeacription = pizza.description.length > 90 ? `${R.take(90, pizza.description)} ...` : pizza.description
        return (
            <GridTile
                key={index}
                title={<span style={{display: 'inlineBlock', marginLeft: 15}}>{pizza.name}</span>}
                subtitle={<div><span   className='titleGrid'   data-type='light' data-tip={shortDeacription}  style={{position:'absolute', display : 'inlineBlock', top : 18, left : 2}}> <Icon icon={ic_help_outline} size='32' style={{color: 'white'}}/> </span><span style={{position:'absolute', display : 'inlineBlock', top : 6, left : '80%'}}>{pizza.price} руб. <ReactTooltip /> </span></div>}
                actionIcon={<IconButton onClick={() => addPizzaToBasket(pizza.id)}><svg fill="white" height="32" viewBox="0 0 24 24" width="32" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0 0h24v24H0zm18.31 6l-2.76 5z" fill="none" />
                    <path d="M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z" />
                </svg></IconButton>}
                titlePosition='bottom'
                titleBackground = 'rgba(45, 177, 4, 0.7)'
            >
                <img
                    src={pizza.image}
                    alt={pizza.name}

                />
            </GridTile>
        )
    }
    render() {
        var cols = window.screen.availWidth > 1000 ? 3 : 1;
        //console.log('ширина ' + width)
        const { pizza } = this.props;
        return (
            <div style={styles.root}>
                <Paper style={style} zDepth={1} >
                    <GridList
                        cellHeight={280}
                        style={styles.gridList}
                        cols={cols}
                    >
                        {pizza.map((p, index) => this.renderPizza(p, index))}
                    </GridList>
                </Paper>
            </div>
        )
    }
}

const mapStateToProps = state => ({
    pizza: getPizza(state)
})

const mapDispatchToProps = {
    fetchPizza,
    addPizzaToBasket
}
export default connect(mapStateToProps, mapDispatchToProps)(Pizza)

