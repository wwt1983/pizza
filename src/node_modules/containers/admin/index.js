import React, { Component } from 'react'
import { connect } from 'react-redux'

import RaisedButton from 'material-ui/RaisedButton';
import TextField from 'material-ui/TextField'
import Avatar from 'material-ui/Avatar'
import FileUploader from 'react-firebase-file-uploader'
import Divider from 'material-ui/Divider'
import DropDownMenu from 'material-ui/DropDownMenu'
import MenuItem from 'material-ui/MenuItem'
import {
    Table,
    TableBody,
    TableHeader,
    TableHeaderColumn,
    TableRow,
    TableRowColumn
} from 'material-ui/Table'

import { firebaseStorage, firebaseRef } from 'data'
import { createArrayTypeOfGoods, getNameCategoryById } from '../../utils/common'

import './style.css'

const style = {
    margin: 12
}

const errorMsg = 'Обязательное поле'

class Admin extends Component {
    componentWillMount() {
        this.setState({
            name: '',
            description: '',
            price: '',
            avatar: '',
            category: 1,
            isUploading: false,
            progress: 0,
            imgURL: '',
            goods: false
        })
    }

    handleChange = (e, value) => {
        this.setState({
            ...this.state,
            [e.target.name]: value
        })
    }

    handleChangeDropDown = (event, index, value) => this.setState({
        ...this.state,
        category: value
    })

    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 })

    handleProgress = (progress) => this.setState({ progress })

    handleUploadError = (error) => {
        this.setState({ isUploading: false });
        console.error(error);
    }

    handleUploadSuccess = (filename) => {
        this.setState({ avatar: filename, progress: 100, isUploading: false });
        firebaseStorage.ref('goods').child(filename).getDownloadURL().then(url => this.setState({ imgURL: url }));
    }

    saveDataToFirebase = () => {
        let pizza = {
            categoryId: this.state.category,
            name: this.state.name,
            description: this.state.description,
            price: this.state.price,
            image: this.state.imgURL
        }
        firebaseRef.child('goods').push(pizza)

        this.setState({
            imgURL: ''
        })
        this.getFireBaseData()
    }

    getFireBaseData = () => {
        firebaseRef.child('goods').once('value').then((snapshot) => {
            let data = createArrayTypeOfGoods(snapshot.val())
            this.setState({
                goods: data
            })
        })
    }

    deleteGood = (id) => {
        firebaseRef.child('goods').child(id).remove()
        this.getFireBaseData()
    }

    render() {
        return (
            <div className='admin-row admin'>
                {this.state.imgURL &&
                    <Avatar
                        src={this.state.imgURL}
                        size={80}
                        style={style.margin}
                    />
                }
                <form>
                    {this.state.isUploading &&
                        <p>Progress: {this.state.progress}</p>
                    }
                    {!this.state.imgURL && <FileUploader
                        accept='image/*'
                        name='avatar'
                        randomizeFilename
                        storageRef={firebaseStorage.ref('goods')}
                        onUploadStart={this.handleUploadStart}
                        onUploadError={this.handleUploadError}
                        onUploadSuccess={this.handleUploadSuccess}
                        onProgress={this.handleProgress}
                    />
                    }<br />
                </form><br />
                {this.state.imgURL && <form>
                    <DropDownMenu value={this.state.category} onChange={this.handleChangeDropDown} name='category'>
                        <MenuItem value={1} primaryText='Пицца' />
                        <MenuItem value={2} primaryText='Домашняя паста' />
                        <MenuItem value={3} primaryText='Салаты' />
                        <MenuItem value={4} primaryText='Десерты' />
                        <MenuItem value={5} primaryText='Перекусы' />
                        <MenuItem value={6} primaryText='Горячие напитки' />
                        <MenuItem value={7} primaryText='Холодные напитки' />
                    </DropDownMenu>
                    <br />
                    <TextField
                        hintText='Название'
                        value={this.state.name}
                        name='name'
                        onChange={this.handleChange}
                        errorText={errorMsg}
                    />
                    <br />
                    <TextField
                        hintText='Описание'
                        value={this.state.description}
                        name='description'
                        onChange={this.handleChange}
                        errorText={errorMsg}
                    />
                    <br />
                    <TextField
                        hintText='Цена'
                        value={this.state.price}
                        name='price'
                        onChange={this.handleChange}
                        errorText={errorMsg}
                    />
                    <br />
                    <TextField
                        disabled={true}
                        value={this.state.imgURL} name='imgURL'
                    />
                    <br />
                    <RaisedButton label='Добавить' secondary={true} style={style} onClick={() => this.saveDataToFirebase()} />
                </form>
                }
                <br /><br />
                <Divider inset={true} /><br />

                <RaisedButton label='Получить данные' secondary={true} style={style} onClick={() => this.getFireBaseData()} />

                {this.state.goods && <Table style={{ width: '100%', borderCollapse: 'unset' }} >
                    <TableHeader displaySelectAll={false}>
                        <TableRow>
                            <TableHeaderColumn></TableHeaderColumn>
                            <TableHeaderColumn>Наименование</TableHeaderColumn>
                            <TableHeaderColumn>Категория</TableHeaderColumn>
                            <TableHeaderColumn>Цена</TableHeaderColumn>
                            <TableHeaderColumn>Описание</TableHeaderColumn>
                            <TableHeaderColumn></TableHeaderColumn>
                        </TableRow>
                    </TableHeader>
                    <TableBody displayRowCheckbox={false}>
                        {this.state.goods.map((p, index) => (
                            <TableRow key={index}>
                                <TableRowColumn> <img src={p.image} style={{ width: 100 }} /></TableRowColumn>
                                <TableRowColumn style={{ width: 200 }}>{p.name}</TableRowColumn>
                                <TableRowColumn style={{ width: 100 }}>{getNameCategoryById(p.categoryId)}</TableRowColumn>
                                <TableRowColumn>{p.price}</TableRowColumn>
                                <TableRowColumn>{p.description}</TableRowColumn>
                                <TableRowColumn> <span className='delete-cart' onClick={() => this.deleteGood(p.key)} ></span></TableRowColumn>
                            </TableRow>
                        ))}
                    </TableBody>
                </Table>}
            </div>

        );
    }
}

export default connect(null, null)(Admin)
