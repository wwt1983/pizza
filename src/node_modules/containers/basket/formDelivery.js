import  React, { Component } from 'react';
import Message from 'containers/basket/EmailMessage'
import {connect} from 'react-redux'
import {startAddOrder} from 'actions'
import R from 'ramda'

import Divider from 'material-ui/Divider';
import TextField from 'material-ui/TextField'
import RaisedButton from 'material-ui/RaisedButton';

import Icon from 'react-icons-kit';
    import { ic_done_all } from 'react-icons-kit/md/ic_done_all'; 
const style = {
    marginLeft: 20
};

class FromDelivery extends Component {
    constructor(props) {
        super(props);
        this.btnSendInfo = this.btnSendInfo.bind(this);

    }
    componentWillMount(){
        this.setState({
            address : '',
            name : '',
            phone : '',
            email : '',
            visibleStatusMessage : false
        });
    }
    handleEmailChange (e) {
        this.setState({email: e.target.value});
    }
    handlePhoneChange (e) {
        this.setState({phone: e.target.value});
    }
    handleAddressChange (e) {
        this.setState({address: e.target.value});
    }
    handleNameChange (e) {
        this.setState({name: e.target.value});
    }
    handleMessageChange (e) {
        this.setState({message: e.target.value});
    }

    btnSendInfo(event)
    {
        event.preventDefault();
        this.setState({
            visibleStatusMessage: true
        })
        startAddOrder(this.props.order, this.state.name, this.state.email, this.state.phone, this.state.address, this.props.price, this.state.message)
    }

    onChangeText()
    {
        //event.preventDefault();
    }
    render(){
        return (<div>
                     {R.not(!this.state.visibleStatusMessage) && <Message /> }
                            <div style= {{width:600, marginLeft: 'auto', marginRight: 'auto'}}>
                                <form>
                                <TextField hintText="Розарио" style={style} underlineShow={false}  id="name"  value={this.state.name} required="required" onChange={(e)=> this.handleNameChange(e)}/>
                                <Divider />
                                <TextField hintText="Адрес доставки" style={style} underlineShow={false} id="adress"  value={this.state.address} required="required" onChange={(e)=> this.handleAddressChange(e)}/>
                                <Divider />
                                <TextField hintText="Email" style={style} underlineShow={false}  id="email" value={this.state.email}  required="required" onChange={(e)=> this.handleEmailChange(e)}/>
                                <Divider />
                                <TextField hintText="Телефон" style={style} underlineShow={false} id="phone"  value={this.state.phone}required="required" onChange={(e)=> this.handlePhoneChange(e)}/>
                                <Divider />
                                    <TextField hintText="Пожелания" style={style} underlineShow={false} name="message" id="message"   value={this.state.message} onChange={(e)=> this.handleMessageChange(e)} required="required" />
                                    <Divider />
                                    <br/>
                                    <RaisedButton label="Заказать"   backgroundColor="#a4c639" icon={<Icon icon={ic_done_all}  size={32} />}  onClick={(e)=> this.btnSendInfo(e) }/>
                                </form>
                            </div>
            </div>
        )
    }
}



const mapDispatchToProps = {
    startAddOrder
}

export default connect(null, mapDispatchToProps)(FromDelivery)

