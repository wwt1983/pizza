import React from 'react'
import { connect } from 'react-redux'
import R from 'ramda'
import InfoAboutDelivery from 'containers/basket/infoAboutDelivery'
import FromDelivery from 'containers/basket/formDelivery'
import { removePizzaFromBasket } from 'actions'

import {
    getTotalBasketPrice,
    getBasketPizzaWithCount,
    getDeliveryPrice
} from 'selectors'


const style = {
    width: 800,
    margin: 20,
    textAlign: 'center',
    display: 'inline-block',
    marginLeft: '25%',
    marginTop: 54
};

import {
    Table,
    TableBody,
    TableHeader,
    TableHeaderColumn,
    TableRow,
    TableRowColumn
} from 'material-ui/Table';


const Basket = ({ pizza, totalPrice, deliveryPrice, removePizzaFromBasket }) => {
    const isBasketEmpty = R.isEmpty(pizza)
    const renderContent = () => (
        <div style={style}>
            {isBasketEmpty && <div>Корзина пуста</div>}
            <Table style={{ width: 790, borderCollapse: 'unset'}} >
                <TableHeader displaySelectAll={false}>
                    <TableRow>
                        <TableHeaderColumn></TableHeaderColumn>
                        <TableHeaderColumn></TableHeaderColumn>
                        <TableHeaderColumn></TableHeaderColumn>
                        <TableHeaderColumn></TableHeaderColumn>
                        <TableHeaderColumn></TableHeaderColumn>
                    </TableRow>
                </TableHeader>
                <TableBody displayRowCheckbox={false}>
                    {pizza.map((p, index) => (
                        <TableRow key={index}>
                            <TableRowColumn> <img src={p.image} alt={p.name} style={{ width: 100 }} /></TableRowColumn>
                            <TableRowColumn  style={{width: 200}}>{p.name}</TableRowColumn>
                            <TableRowColumn>{p.price}</TableRowColumn>
                            <TableRowColumn>{p.count}</TableRowColumn>
                            <TableRowColumn> <span className='delete-cart' onClick={() => removePizzaFromBasket(p.id)} ></span></TableRowColumn>
                        </TableRow>


                    ))}
                </TableBody>
            </Table>

            {
                R.not(isBasketEmpty) &&
                <div className='row'>
                    <div className='pull-right total-user-checkout'>
                        <b>К оплате : {totalPrice} руб.</b><br />
                        <b>Доставка: {deliveryPrice} руб.</b><br />
                    </div>
                </div>
            }
            <br /><br />
            {!isBasketEmpty && <InfoAboutDelivery />}
            {R.not(isBasketEmpty) && <FromDelivery order={pizza} price={totalPrice} />}
            </div>
    )
    return (
        <div className='view-container'>
            <div className='container'>
                <div className='row'>
                    <div className='col-md-9'>
                        {renderContent()}
                    </div>
                </div>
            </div>
        </div>
    )
}

const mapDispatchToProps = {
    removePizzaFromBasket
}

const mapStateToProps = state => ({
    pizza: getBasketPizzaWithCount(state),
    totalPrice: getTotalBasketPrice(state),
    deliveryPrice: getDeliveryPrice(state)
})
export default connect(mapStateToProps, mapDispatchToProps)(Basket)
