import React, { Component } from 'react';
import { YMaps, Map, Circle, GeoObject } from 'react-yandex-maps';



export class YandexDelivery extends Component {
  render() {
    const mapState = { center: [55.155937, 61.410854], zoom: 11 };
    const {userCoordinats} = this.props

    console.log('userCoordinats = ' + userCoordinats)
    var userPoint = [{userCoordinats}]
    return (<YMaps>
      <Map state={mapState} width='100%' height='600px'>
        <GeoObject
          // The geometry description.
          geometry={{
            type: 'Point',
            coordinates: [55.155937, 61.410854]
          }}
          // Properties.
          properties={{
            // The placemark content.
            iconContent: 'Доставка 50 рублей'
          }}
          // Options.
          options={{
            // The placemark's icon will stretch to fit its contents.
            preset: 'islands#darkGreenStretchyIcon'
            // The placemark can be moved.
          }}
        />
        <GeoObject
          // The geometry description.
          geometry={{
            type: 'Point',
            coordinates: [55.194789, 61.455887]
          }}
          // Properties.
          properties={{
            // The placemark content.
            iconContent: 'Доставка 150 рублей'
          }}
          // Options.
          options={{
            // The placemark's icon will stretch to fit its contents.
            preset: 'islands#redStretchyIcon'
            // The placemark can be moved.
          }}
        />
        <GeoObject
          // The geometry description.
          geometry={{
            type: 'Point',
            coordinates: userPoint
          }}
        />
        <Circle
          geometry={{
            // The coordinates of the center of the circle.
            coordinates: [55.155937, 61.410854],
            // The radius of the circle in meters.
            radius: 4000
          }}
          options={{
            // Setting the circle options.
            // Enabling drag-n-drop for the circle.
            draggable: false,
            // Fill color. The last byte (77) defines transparency.
            // The transparency of the fill can also be set using
            // the option "fillOpacity".
            fillColor: '#ffff0022',
            // Stroke color.
            strokeColor: '#3caa3c88',
            // Stroke transparency.
            strokeOpacity: 0.8,
            // The width of the stroke in pixels.
            strokeWidth: 5,
          }}
        />
        <Circle
          geometry={{
            // The coordinates of the center of the circle.
            coordinates: [55.155937, 61.410854],
            // The radius of the circle in meters.
            radius: 9000
          }}
          options={{
            // Setting the circle options.
            // Enabling drag-n-drop for the circle.
            draggable: false,
            // Fill color. The last byte (77) defines transparency.
            // The transparency of the fill can also be set using
            // the option "fillOpacity".
            fillColor: 'rgba(237, 235, 235, 0.3)',
            // Stroke color.
            strokeColor: '#cf0000',
            // Stroke transparency.
            strokeOpacity: 0.8,
            // The width of the stroke in pixels.
            strokeWidth: 5,
          }}
        />
      </Map>
    </YMaps>
    )
  }
}
